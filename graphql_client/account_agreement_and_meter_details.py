# Generated by ariadne-codegen
# Source: gql/

from typing import Annotated, Any, List, Literal, Optional, Union

from pydantic import Field

from .base_model import BaseModel


class AccountAgreementAndMeterDetails(BaseModel):
    account: Optional["AccountAgreementAndMeterDetailsAccount"]


class AccountAgreementAndMeterDetailsAccount(BaseModel):
    electricity_agreements: Optional[
        List[Optional["AccountAgreementAndMeterDetailsAccountElectricityAgreements"]]
    ] = Field(alias="electricityAgreements")
    campaigns: Optional[
        List[Optional["AccountAgreementAndMeterDetailsAccountCampaigns"]]
    ]


class AccountAgreementAndMeterDetailsAccountElectricityAgreements(BaseModel):
    id: Optional[int]
    valid_to: Optional[Any] = Field(alias="validTo")
    valid_from: Optional[Any] = Field(alias="validFrom")
    tariff: Optional[
        Annotated[
            Union[
                "AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffStandardTariff",
                "AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffDayNightTariff",
                "AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffThreeRateTariff",
                "AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffHalfHourlyTariff",
                "AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffPrepayTariff",
            ],
            Field(discriminator="typename__"),
        ]
    ]
    meter_point: (
        "AccountAgreementAndMeterDetailsAccountElectricityAgreementsMeterPoint"
    ) = Field(alias="meterPoint")


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffStandardTariff(
    BaseModel
):
    typename__: Literal["StandardTariff"] = Field(alias="__typename")
    id: Optional[str]
    product_code: Optional[str] = Field(alias="productCode")
    standing_charge: Optional[float] = Field(alias="standingCharge")
    unit_rate: Optional[float] = Field(alias="unitRate")


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffDayNightTariff(
    BaseModel
):
    typename__: Literal["DayNightTariff"] = Field(alias="__typename")


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffThreeRateTariff(
    BaseModel
):
    typename__: Literal["ThreeRateTariff"] = Field(alias="__typename")


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffHalfHourlyTariff(
    BaseModel
):
    typename__: Literal["HalfHourlyTariff"] = Field(alias="__typename")


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsTariffPrepayTariff(
    BaseModel
):
    typename__: Literal["PrepayTariff"] = Field(alias="__typename")


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsMeterPoint(BaseModel):
    id: str
    mpan: str
    status: Optional[str]
    meters: Optional[
        List[
            Optional[
                "AccountAgreementAndMeterDetailsAccountElectricityAgreementsMeterPointMeters"
            ]
        ]
    ]


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsMeterPointMeters(
    BaseModel
):
    serial_number: str = Field(alias="serialNumber")
    smart_devices: Optional[
        List[
            Optional[
                "AccountAgreementAndMeterDetailsAccountElectricityAgreementsMeterPointMetersSmartDevices"
            ]
        ]
    ] = Field(alias="smartDevices")


class AccountAgreementAndMeterDetailsAccountElectricityAgreementsMeterPointMetersSmartDevices(
    BaseModel
):
    id: str
    device_id: str = Field(alias="deviceId")
    serial_number: str = Field(alias="serialNumber")


class AccountAgreementAndMeterDetailsAccountCampaigns(BaseModel):
    name: Optional[str]
